GCCRUST_INSTALL_NAME := $(shell echo gccrust|sed '$(program_transform_name)')
GCCRUST_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gccrust|sed '$(program_transform_name)')

RUST_SRC_DIR = $(srcdir)/rust/gcc-rust
RUST_BUILD_DIR = $(RUST_SRC_DIR)/target/debug
RUST_LIB_NAME = gcc_rust
RUST_LIB_SONAME = lib$(RUST_LIB_NAME).so
RUST_LIB_BUILD_PATH = $(RUST_BUILD_DIR)/$(RUST_LIB_SONAME)

rust: rust1$(exeext) $(RUST_LIB_BUILD_PATH)

.PHONY: rust

# Driver

GCCRUST_OBJS = \
   $(GCC_OBJS) \
   rust/rustspec.o \
   $(END)

gccrust$(exeext): $(GCCRUST_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
	  $(GCCRUST_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
	  $(EXTRA_GCC_LIBS) $(LIBS)

# The compiler proper

rust1_OBJS = \
	rust/rust1.o \
	$(END)

RUST_SRCS = \
	$(RUST_SRC_DIR)/src/lib.rs \
	$(RUST_SRC_DIR)/src/gcc_api.rs \
	$(RUST_SRC_DIR)/src/mir2gimple.rs

RUST_SYSROOT = $(shell cd "$(RUST_SRC_DIR)" && rustc --print sysroot)

$(RUST_LIB_BUILD_PATH): $(RUST_SRCS)
	(cd $(RUST_SRC_DIR); \
	  cargo rustc -- -C link-args="-Wl,-rpath,$(RUST_SYSROOT)/lib")

rust1$(exeext): attribs.o $(rust1_OBJS) $(BACKEND) $(LIBDEPS) | $(RUST_LIB_BUILD_PATH)
	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
		  attribs.o $(rust1_OBJS) $(BACKEND) $(LIBS) $(BACKENDLIBS) \
		  -L$(RUST_BUILD_DIR) -l$(RUST_LIB_NAME) \
		  -Wl,-rpath=$(DESTDIR)/$(libdir) \
		  -Wl,-rpath=$(RUST_SYSROOT)/lib \
		  -pthread

rust.all.cross:

rust.start.encap: gccrust$(exeext)
rust.rest.encap:

rust.install-common: installdirs
	-rm -f $(DESTDIR)$(bindir)/$(GCCRUST_INSTALL_NAME)$(exeext)
	$(INSTALL_PROGRAM) \
	  $(RUST_LIB_BUILD_PATH) \
	  $(DESTDIR)/$(libdir)/$(RUST_LIB_SONAME)
	$(INSTALL_PROGRAM) \
	  gccrust$(exeext) \
	  $(DESTDIR)$(bindir)/$(GCCRUST_INSTALL_NAME)$(exeext)
	rm -f $(DESTDIR)$(bindir)/$(GCCRUST_TARGET_INSTALL_NAME)$(exeext); \
	( cd $(DESTDIR)$(bindir) && \
	  $(LN) $(GCCRUST_INSTALL_NAME)$(exeext) $(GCCRUST_TARGET_INSTALL_NAME)$(exeext) ); \

rust.install-man:
rust.install-info:
rust.install-pdf:
rust.install-plugin:
rust.install-html:
rust.info:
rust.dvi:
rust.pdf:
rust.html:
rust.man:
rust.mostlyclean:
rust.clean:
rust.distclean:
rust.maintainer-clean:

rust.uninstall:
	-rm -f gccrust$(exeext) rust1$(exeext)
	-rm -f $(rust_OBJS)

rust.stage1: stage1-start
	-mv rust/*$(objext) stage1/rust
rust.stage2: stage2-start
	-mv rust/*$(objext) stage2/rust
rust.stage3: stage3-start
	-mv rust/*$(objext) stage3/rust
rust.stage4: stage4-start
	-mv rust/*$(objext) stage4/rust
rust.stageprofile: stageprofile-start
	-mv rust/*$(objext) stageprofile/rust
rust.stagefeedback: stagefeedback-start
	-mv rust/*$(objext) stagefeedback/rust

selftest-rust:
